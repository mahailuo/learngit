#设置全局作者名字、邮箱以便跟踪管理者
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

#在当前目录下初始化git，即创建git版本库
git init 

#add命令可添加文件到暂存区，commit命令可提交文件
使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成

要随时掌握工作区的状态，使用git status命令
如果git status告诉你有文件被修改过，用git diff可以查看修改内容

#查看操作日志
git log 命令显示从最近到最远的提交日志
git log --pretty=oneline  简化日志或者使用 --pretty --oneline
git reflog 用来记录你的每一次命令

#退回到某个版本
git reset --hard HEAD^ 退回到上一个版本
git reset --hard HEAD^^ 上上一个版本
git reset --hard HEAD~100 上100个版本
git reset --hard <commit_id>退回到指定的版本
git reset --hard 1094a

git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别

#撤销修改
git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态

git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库
